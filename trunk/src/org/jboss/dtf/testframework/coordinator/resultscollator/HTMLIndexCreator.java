/*
 * JBoss, Home of Professional Open Source
 * Copyright 2008, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2008,
 * @author JBoss Inc.
 */
//
// Copyright (C) 2001,
//
// HP Arjuna Labs
// Newcastle upon Tyne,
// Tyne and Wear,
// UK.
//
// $Id: HTMLIndexCreator.java 170 2008-03-25 18:59:26Z jhalliday $

package org.jboss.dtf.testframework.coordinator.resultscollator;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.File;

/**
 * This class is used to create the HTML index file into the results
 * directory generated by the results collator.
 */
public class HTMLIndexCreator
{
    public static void addResultToIndex(String filename, long runId, String resultFile, int nodeId, String taskName, String testId, String permCode)
    {
        try
        {
        	/* If the file already exists append to it otherwise create a new one */
            File htmlFile = new File(filename);
            boolean exists = htmlFile.exists();
            BufferedWriter out = null;

            if (exists)
            {
                out = new BufferedWriter(new FileWriter(filename, true));
            }
            else
            {
                out = new BufferedWriter(new FileWriter(htmlFile));

                outputHeader(runId, out);
            }

            outputEntry(out, runId, resultFile, nodeId, taskName, testId, permCode);
            out.close();
        }
        catch (java.io.IOException e)
        {
            System.err.println("ERROR: Failed to add results to index file");
        }
    }

    protected static void outputEntry(BufferedWriter out, long runId, String resultFile, int nodeId, String taskName, String testId, String permCode) throws java.io.IOException
    {
        writeln(out, "\t\t<tr>");
        writeln(out, "\t\t\t<td>"+testId+"</td><td>"+nodeId+"</td><td>"+taskName+"</td><td>"+permCode+"</td><td><a href=\""+resultFile+"\">"+resultFile+"</a></td>");
        writeln(out, "\t\t</tr>");
    }

    protected static void outputHeader(long runId, BufferedWriter out) throws java.io.IOException
    {
        writeln(out, "<html><head><title>Task Output Log Index (run#"+runId+")</title></head>");
        writeln(out, "<body bgcolor=\"White\">");
        writeln(out, "<h2>Results for RunId#"+runId+"</h2>");
        writeln(out, "\t<table width=\"100%\" border=1 cellspacing=0>");
        writeln(out, "\t\t<tr>");
        writeln(out, "\t\t\t<td>TestId</td><td>NodeId</td><td>Task Name</td><td>Permutation Code</td><td>Log File</td>");
        writeln(out, "\t\t</tr>");
    }

    protected static void writeln(BufferedWriter out, String text) throws java.io.IOException
    {
        out.write(text);
        out.newLine();
    }

}
